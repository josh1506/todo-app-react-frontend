{"version":3,"sources":["app/auth.js","app/route.js","app/todo.js","app/reducer.js","app/configStore.js","components/pages/LandingPage.jsx","components/pages/Login.jsx","components/common/NavBar.jsx","components/pages/Signup.jsx","components/common/TodoCreateModal.jsx","components/common/TodoDeleteModal.jsx","components/common/TodoUpdateModal.jsx","components/pages/ToDo.jsx","components/common/Footer.jsx","App.jsx","index.jsx"],"names":["AUTH_ADDED","AUTH_REMOVED","authAdd","token","localStorage","setItem","type","payload","auth","action","userToken","getItem","axios","create","baseURL","headers","TODO_GET_DATA","TODO_ADDED","TODO_DELETED","TODO_UPDATED","TASK_UPDATED","TASK_DELETED","TODO_UPDATED_DATA","todo","todoList","console","log","filter","id","map","todoID","checklist","task","combineReducers","createStore","reducer","applyMiddleware","thunk","connect","state","props","className","to","useState","username","password","userData","setUserData","error","setError","handleSubmit","a","route","post","catch","data","history","replace","responseFacebook","response","then","useEffect","onSubmit","htmlFor","name","placeholder","value","onChange","e","target","onClick","appId","fields","callback","cssClass","textButton","icon","faFacebookF","color","size","authRemoved","removeItem","confirmPassword","userForm","setUserForm","buttonStatus","setButtonStatus","handleInputPassword","event","currentTarget","message","disabled","todoAdded","dispatch","request","checkListCount","setCheckListCount","memo","status","setTodo","setChecklist","checklistData","Object","entries","push","onSetModal","key","text","count","length","todoDeleted","delete","todoMemoTrimMsg","onSelectTodo","substring","todoMemoCheckLength","trim","todoMessage","onCloseEditModal","todoUpdateData","put","taskDeleted","1","setChecklistData","deleteModal","setDeleteModal","itemSelect","handleChangeChecklist","index","newChecklist","faTrashAlt","style","display","faMinus","marginLeft","taskItem","handleDeleteChecklist","faPlus","todoGetData","get","todoUpdated","taskUpdated","selectedItem","setSelectedItem","todoSelected","setTodoSelected","createModal","setCreateModal","updateModal","setUpdateModal","calcTotalTask","completedTask","totalTask","totalStatus","Math","ceil","sortDataByStatus","sort","b","faPlusCircle","textAlign","checked","handleTodoStatus","faEdit","handleTaskStatus","Footer","href","rel","faLinkedin","faGithub","App","path","component","ToDo","Login","Signup","LandingPage","ReactDOM","render","store","configStore","document","getElementById"],"mappings":"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","file":"static/js/main.e7d7495e.chunk.js","sourcesContent":["// action type\r\nconst AUTH_ADDED = 'authAdded'\r\nconst AUTH_REMOVED = 'authRemoved'\r\n\r\n\r\n// actions\r\nexport const authAdd = token => {\r\n    localStorage.setItem('auth_token', token)\r\n    \r\n    return {\r\n        type: AUTH_ADDED,\r\n        payload: {\r\n            token\r\n        }\r\n    }\r\n}\r\n\r\nexport const authRemoved = () => {\r\n    localStorage.removeItem('auth_token')\r\n    \r\n    return {\r\n        type: AUTH_REMOVED,\r\n    }\r\n}\r\n\r\n\r\n// reducer\r\nconst auth = (auth='', action) => {\r\n    switch (action.type) {\r\n        case AUTH_ADDED:\r\n            return action.payload.token\r\n            \r\n        case AUTH_REMOVED:\r\n            return ''\r\n    \r\n        default:\r\n            return auth;\r\n    }\r\n} \r\n\r\nexport default auth\r\n","import axios from 'axios'\r\n\r\nconst userToken = localStorage.getItem('auth_token')\r\n\r\nexport default axios.create({\r\n    baseURL: 'https://todo-app-django-server.herokuapp.com/',\r\n    headers: {\r\n        'Authorization': `Token ${userToken}`\r\n    }\r\n})","import route from './route'\r\n\r\n// action type\r\nconst TODO_GET_DATA = 'todoGetData'\r\nconst TODO_ADDED = 'todoAdded'\r\nconst TODO_DELETED = 'todoDeleted'\r\nconst TODO_UPDATED = 'todoUpdated'\r\nconst TASK_UPDATED = 'taskUpdated'\r\nconst TASK_DELETED = 'taskDeleted'\r\nconst TODO_UPDATED_DATA = 'todoUpdatedData'\r\n\r\n\r\n// action\r\nexport const todoGetData = (token) => async dispatch => {\r\n    const respond = await route.get('todo/list/get_user_data/',{headers: {'Authentication': `Token ${token}`}})\r\n    .then(({data}) => dispatch({\r\n        type: TODO_GET_DATA,\r\n        payload: {todoList: data}\r\n    }))\r\n    .catch(() => console.log('Something went wrong'))\r\n}\r\n\r\nexport const todoAdded = (todo, checklist) => async dispatch => {\r\n    try {\r\n        const request = await route.post('todo/list/', todo)\r\n        await checklist.map(task => route.post(`todo/task/`, {...task, todo: request.data.id}))\r\n\r\n        dispatch({\r\n            type: TODO_ADDED,\r\n            payload: {\r\n                ...request.data,\r\n                checklist\r\n            }\r\n        })\r\n    } catch {\r\n        console.log(\"Something went wrong\")\r\n    }\r\n}\r\n\r\nexport const todoDeleted = todo => async dispatch => {\r\n    await route.delete(`todo/list/${todo.id}/`)\r\n\r\n    dispatch({\r\n        type: TODO_DELETED,\r\n        payload: todo \r\n    })\r\n}\r\n\r\nexport const todoUpdated = (todo) => async dispatch => {\r\n    todo.status = !todo.status\r\n    await route.put(`todo/list/${todo.id}/`, todo)\r\n    \r\n    dispatch({\r\n        type: TODO_UPDATED,\r\n        payload: todo\r\n    })\r\n}\r\n\r\nexport const taskUpdated = (todoID, task) => async dispatch => {\r\n    task.status = !task.status\r\n    await route.put(`todo/task/${task.id}/`, task)\r\n\r\n    dispatch({\r\n        type: TASK_UPDATED,\r\n        payload: {\r\n            todoID,\r\n            checklist: task\r\n        }\r\n    })\r\n}\r\n\r\nexport const taskDeleted = (todo, task) => async dispatch => {\r\n    await route.delete(`todo/task/${task.id}/`)\r\n\r\n    dispatch({\r\n        type: TASK_DELETED,\r\n        payload: {\r\n            ...todo,\r\n            checklist: task\r\n        }\r\n    })\r\n}\r\n\r\nexport const todoUpdateData = (todo, task) => async dispatch => {\r\n    console.log(task)\r\n    await route.put(`/todo/list/${todo.id}/`, todo)\r\n    if(task.length > 0) await task.map(checklist => checklist.id \r\n        ? route.put(`todo/task/${checklist.id}/`, checklist) \r\n        : route.post(`todo/task/`, {...checklist, todo: todo.id}))\r\n    \r\n    dispatch({\r\n        type: TODO_UPDATED_DATA,\r\n        payload: {\r\n            ...todo,\r\n            checklist: task\r\n        }\r\n    })\r\n}\r\n\r\n\r\n// reducer\\\r\nconst todo = (todoList=[], action) => {\r\n    switch (action.type) {\r\n        case TODO_GET_DATA:\r\n            return action.payload.todoList\r\n            \r\n        case TODO_ADDED:\r\n            console.log(action.payload)\r\n            return [...todoList, action.payload]\r\n            \r\n        case TODO_DELETED:\r\n            return todoList.filter(todo => todo.id !== action.payload.id)\r\n            \r\n        case TODO_UPDATED:\r\n            return todoList.map(todo => todo.id === action.payload.id ? action.payload : todo)\r\n            \r\n        case TODO_UPDATED_DATA:\r\n            return todoList.map(todo => todo.id === action.payload.id ? action.payload : todo)\r\n            \r\n        case TASK_UPDATED:\r\n            const todoID = action.payload.todoID\r\n            const checklist = action.payload.checklist\r\n\r\n            return [...todoList.map(todo => \r\n                todo.id === todoID ? \r\n                    {...todo, \r\n                        checklist: [...todo.checklist.map(task => \r\n                            task.id === checklist.id \r\n                            ? checklist \r\n                            : task)]} \r\n                    : todo)]\r\n\r\n        case TASK_DELETED:\r\n            return todoList.map(todo => todo.id === action.payload.id \r\n                ? {...todo, checklist:todo.checklist.filter(task => task.id !== action.payload.checklist.id)} \r\n                : todo)\r\n            \r\n        default:\r\n            return todoList;\r\n    }\r\n}\r\n\r\nexport default todo","import { combineReducers } from 'redux'\r\nimport auth from './auth'\r\nimport todo from './todo'\r\n\r\nexport default combineReducers({\r\n    auth,\r\n    todo,\r\n})","import { createStore, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport reducer from './reducer'\r\n\r\nexport default createStore(reducer, applyMiddleware(thunk))","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport '../assets/css/landingpage.css'\r\n\r\nfunction LandingPage(props) {\r\n    return (\r\n        <div className=\"landing-page-container\">\r\n            <div className=\"landing-page-show-content\">\r\n                <div className=\"landing-page-img\"></div>\r\n                {props.auth ?\r\n                    <Link to='/todo' className=\"landing-page-button\">Go to Dashboard</Link> :\r\n                    <Link to='/login' className=\"landing-page-button\">Register/Login</Link>}\r\n            </div>\r\n            <div className='landing-page-paragraph-container'>\r\n                <p className=\"landing-page-paragraph\">To-do lists should not take hours to build and should not be too complex. Any second you spent making a task list and planning for the job ahead is time lost instead of going out there and removing tasks from your calendar.</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return { auth: state.auth }\r\n}\r\n\r\nexport default connect(mapStateToProps)(LandingPage);","import React, { useState, useEffect } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faFacebookF } from '@fortawesome/free-brands-svg-icons';\r\nimport FacebookLogin from 'react-facebook-login';\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { authAdd } from '../../app/auth'\r\nimport route from '../../app/route'\r\nimport '../assets/css/login.css'\r\n\r\nfunction Login(props) {\r\n    const [userData, setUserData] = useState({ username: '', password: '' })\r\n    const [error, setError] = useState('')\r\n\r\n    const handleSubmit = async () => {\r\n        setError('')\r\n        const data = await route.post('user/auth/', userData)\r\n            .catch(() => setError('username or password is incorrect'))\r\n\r\n        if (data) {\r\n            setError('')\r\n            const token = data.data.token\r\n            props.authAdd(token)\r\n            props.history.replace('/')\r\n        }\r\n    }\r\n\r\n    const responseFacebook = async (response) => {\r\n        await route.post('user/facebook/auth/', response)\r\n            .then(({ data }) => {\r\n                setError('')\r\n                const token = data.token\r\n                props.authAdd(token)\r\n                props.history.replace('/')\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        const token = props.auth || localStorage.getItem('auth_token')\r\n        if (token) props.history.replace('/todo')\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"login-page-container\">\r\n            <div className='login-container'>\r\n                {error && <p className=\"login-error-label\">* {error}</p>}\r\n                <form className='login-form-container' onSubmit={handleSubmit}>\r\n                    <label htmlFor=\"username\" className=\"login-label\">Username</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"username\"\r\n                        id=\"username\"\r\n                        className=\"login-input-text\"\r\n                        placeholder=\"Username\"\r\n                        value={userData.username}\r\n                        onChange={e => setUserData({ ...userData, username: e.target.value })}\r\n                    />\r\n                    <label htmlFor=\"password\" className=\"login-label\">Password</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"password\"\r\n                        id=\"password\"\r\n                        className=\"login-input-text\"\r\n                        placeholder=\"Password\"\r\n                        value={userData.password}\r\n                        onChange={e => setUserData({ ...userData, password: e.target.value })}\r\n                    />\r\n                </form>\r\n                <div className='login-btn-container'>\r\n                    <div className='login-btn-container-two'>\r\n                        <Link to='/signup' className='login-btn-signup'>Signup</Link>\r\n                        <button className='login-btn-login' onClick={() => handleSubmit()}>Login</button>\r\n                    </div>\r\n                    <div>\r\n                        <p className='login-label'>Login with:</p>\r\n                        <FacebookLogin\r\n                            appId=\"808533529754347\"\r\n                            fields=\"name,email,picture\"\r\n                            callback={responseFacebook}\r\n                            cssClass=\"facebook-login-btn\"\r\n                            textButton={<FontAwesomeIcon icon={faFacebookF} color='white' size='2x' className='facebook-login-icon' />}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return { auth: state.auth }\r\n}\r\n\r\nexport default connect(mapStateToProps, { authAdd })(Login);","import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { authAdd, authRemoved } from '../../app/auth'\r\nimport '../assets/css/navbar.css'\r\n\r\nfunction NavBar(props) {\r\n    useEffect(() => {\r\n        if (localStorage.getItem('auth_token')) props.authAdd(localStorage.getItem('auth_token'))\r\n    }, [])\r\n\r\n    const handleLogoutUser = () => {\r\n        props.authRemoved()\r\n    }\r\n\r\n    return (\r\n        <div className='navbar-container'>\r\n            <div></div>\r\n            <Link to='/' className='navbar-title'>Todo App</Link>\r\n            {props.auth ?\r\n                <div className='navbar-button-container'>\r\n                    <Link to='/todo' className='navbar-button'>Dashboard</Link>\r\n                    <p className='navbar-button-seperator'>/</p>\r\n                    <Link to='/' className='navbar-button' onClick={handleLogoutUser}>Logout</Link>\r\n                </div> :\r\n                <div className='navbar-button-container'>\r\n                    <Link to='/login' className='navbar-button'>Login</Link>\r\n                    <p className='navbar-button-seperator'>/</p>\r\n                    <Link to='/signup' className='navbar-button'>Signup</Link>\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return { auth: state.auth }\r\n}\r\n\r\nexport default connect(mapStateToProps, { authRemoved, authAdd })(NavBar);","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { authAdd } from '../../app/auth'\r\nimport route from '../../app/route'\r\nimport '../assets/css/signup.css'\r\n\r\nfunction Signup(props) {\r\n    const [error, setError] = useState({})\r\n    const [userForm, setUserForm] = useState({ username: '', password: '', confirmPassword: '' })\r\n    const [buttonStatus, setButtonStatus] = useState(false)\r\n    useEffect(() => {\r\n        const token = props.auth || localStorage.getItem('auth_token')\r\n        if (token) props.history.replace('/todo')\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const { password, confirmPassword } = userForm\r\n\r\n        if (password === confirmPassword && password !== '') return setButtonStatus(false)\r\n        return setButtonStatus(true)\r\n    }, [userForm.password, userForm.confirmPassword])\r\n\r\n    const handleInputPassword = event => {\r\n        const name = event.currentTarget.name\r\n        const value = event.currentTarget.value\r\n\r\n        setUserForm({ ...userForm, [name]: value })\r\n    }\r\n\r\n    const handleSubmit = async () => {\r\n        delete userForm.confirmPassword\r\n\r\n        await route.post('user/account/', userForm)\r\n            .then(({ data }) => {\r\n                route.post('user/auth/', userForm)\r\n                    .then(({ data }) => {\r\n                        props.authAdd(data.token)\r\n                        props.history.replace('/')\r\n                    })\r\n            })\r\n            .catch(({ response }) => setError(response.data))\r\n    }\r\n\r\n    return (\r\n        <div className='signup-page-container'>\r\n            <div className='signup-container'>\r\n                {error.username && error.username.map(message => <p className='signup-error-label'>Username: {message}</p>)}\r\n                {error.password && error.password.map(message => <p className='signup-error-label'>Password: {message}</p>)}\r\n                <form action=\"\" className=\"signup-form-container\" onSubmit={handleSubmit}>\r\n                    <label htmlFor=\"username\" className='signup-label'>Username</label>\r\n                    <input type=\"text\" name=\"username\" id=\"username\" placeholder=\"Username\" className='signup-input-text' value={userForm.username} onChange={e => setUserForm({ ...userForm, username: e.target.value })} />\r\n                    <label htmlFor=\"password\" className='signup-label'>Password</label>\r\n                    <input type=\"password\" name=\"password\" id=\"password\" className='signup-input-text' placeholder='Password' value={userForm.password} onChange={handleInputPassword} />\r\n                    <label htmlFor=\"confirm-password\" className='signup-label'>Confirm Password</label>\r\n                    <input type=\"password\" name=\"confirmPassword\" id=\"confirm-password\" className='signup-input-text' placeholder='Confirm Password' value={userForm.confirmPassword} onChange={handleInputPassword} />\r\n                </form>\r\n                <div className='signup-button-container'>\r\n                    <Link to='/login' className='signup-button-cancel'>Cancel</Link>\r\n                    <button className='signup-button-create' disabled={buttonStatus} onClick={handleSubmit}>Create Account</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return { auth: state.auth }\r\n}\r\n\r\nexport default connect(mapStateToProps, { authAdd })(Signup);","import React, { useState } from 'react';\r\nimport { todoAdded } from '../../app/todo'\r\nimport { connect } from 'react-redux'\r\n\r\nfunction TodoCreateModal(props) {\r\n    const [checkListCount, setCheckListCount] = useState([])\r\n    const [todo, setTodo] = useState({ memo: '', status: false })\r\n    const [checklist, setChecklist] = useState({})\r\n\r\n    const handleAddCheckList = () => {\r\n        const count = checkListCount.length + 1\r\n        setCheckListCount([...checkListCount, count])\r\n        setChecklist({ ...checklist, [count]: { text: '', status: false } })\r\n    }\r\n\r\n    const handleSubmit = event => {\r\n        const checklistData = []\r\n        for (const [key, value] of Object.entries(checklist)) {\r\n            checklistData.push(value)\r\n        }\r\n\r\n        props.todoAdded(todo, checklistData)\r\n        props.onSetModal(false)\r\n        setChecklist([])\r\n    }\r\n\r\n    return (\r\n        <div className='create-todo-modal-container'>\r\n            <div className=\"create-todo-modal\">\r\n                <form className='todo-form-container' onSubmit={handleSubmit}>\r\n                    <label htmlFor=\"memo\" className=\"todo-label\">Memo</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"memo\"\r\n                        id=\"memo\"\r\n                        className=\"todo-input-text-memo\"\r\n                        placeholder=\"Memo\"\r\n                        value={todo.memo}\r\n                        onChange={e => setTodo({ ...todo, memo: e.target.value })}\r\n                    />\r\n                    <label htmlFor=\"checklist\" className=\"todo-label\">Memo</label>\r\n                    <div className='checklist-count-container'>\r\n                        {checkListCount.map(key => <input\r\n                            className=\"todo-input-text-checklist\"\r\n                            key={key}\r\n                            type=\"text\"\r\n                            name=\"checklist\"\r\n                            id=\"checklist\"\r\n                            placeholder=\"Checklist\"\r\n                            value={checklist[key].text}\r\n                            onChange={e => setChecklist({ ...checklist, [key]: { text: e.target.value } })}\r\n                        />)}\r\n                    </div>\r\n                    <p onClick={handleAddCheckList} className='todo-label-add'>+ Add checklist</p>\r\n                </form>\r\n                <div className='todo-btn-container'>\r\n                    <button className='todo-btn-cancel' onClick={() => {\r\n                        props.onSetModal(false)\r\n                        setChecklist([])\r\n                    }}>Cancel</button>\r\n                    <button className='todo-btn-create' onClick={() => handleSubmit()}>Create</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default connect(null, { todoAdded })(TodoCreateModal);","import React from 'react';\r\nimport { connect } from 'react-redux'\r\n\r\nimport { todoDeleted } from '../../app/todo'\r\n\r\nfunction TodoDeleteModal(props) {\r\n    const todoMemoTrimMsg = props.onSelectTodo.memo.substring(0, 25)\r\n    const todoMemoCheckLength = props.onSelectTodo.memo.trim().length > 25 ? '...' : ''\r\n    const todoMessage = `${todoMemoTrimMsg}${todoMemoCheckLength}`\r\n\r\n    const handleDeleteTodo = () => {\r\n        props.todoDeleted(props.onSelectTodo)\r\n        props.onSetModal(false)\r\n        props.onCloseEditModal(false)\r\n    }\r\n\r\n    return (\r\n        <div className='delete-todo-modal-container'>\r\n            <div className=\"delete-todo-modal\">\r\n                <p className='delete-message'>Are you sure you want to delete <h4>{todoMessage}</h4></p>\r\n                <div className='todo-btn-container'>\r\n                    <button className='todo-btn-cancel-delete' onClick={() => props.onSetModal(false)}>Cancel</button>\r\n                    <button className='todo-btn-delete' onClick={handleDeleteTodo}>Delete</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default connect(null, { todoDeleted })(TodoDeleteModal);","import React, { useState, useEffect } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTrashAlt, faMinus, faPlus } from '@fortawesome/free-solid-svg-icons'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { todoUpdateData, taskDeleted } from '../../app/todo'\r\nimport TodoDeleteModal from './TodoDeleteModal';\r\n\r\nfunction TodoUpdateModal(props) {\r\n    const [checklistData, setChecklistData] = useState([{ id: 1, 1: { text: '', status: false } }])\r\n    const [todo, setTodo] = useState({ memo: '', status: false, checklist: [{ text: '', status: false }] })\r\n    const [checklist, setChecklist] = useState({ 1: { text: '', status: false } })\r\n    const [deleteModal, setDeleteModal] = useState(false)\r\n\r\n    useEffect(() => {\r\n        if (props.itemSelect.checklist) setChecklistData(props.itemSelect.checklist)\r\n\r\n        setTodo(props.itemSelect)\r\n        // setChecklistData()\r\n\r\n\r\n    }, [props.itemSelect])\r\n\r\n    const handleAddCheckList = () => {\r\n        const count = checklistData.length + 1\r\n        setChecklistData([...checklistData, count])\r\n        setChecklist({ ...checklist, [count]: { text: '', status: false } })\r\n    }\r\n\r\n    const handleChangeChecklist = index => e => {\r\n        const newChecklist = [...checklistData]\r\n        newChecklist[index] = { ...newChecklist[index], text: e.target.value }\r\n        setChecklistData(newChecklist)\r\n    }\r\n\r\n    const handleDeleteChecklist = task => {\r\n        props.taskDeleted(todo, task)\r\n        setChecklistData(checklistData.filter(taskItem => taskItem.id !== task.id))\r\n    }\r\n\r\n    const handleSubmit = () => {\r\n        props.todoUpdateData(todo, checklistData)\r\n        props.onSetModal(false)\r\n    }\r\n\r\n    return (\r\n        <div className='create-todo-modal-container'>\r\n            <div className=\"create-todo-modal\">\r\n                <FontAwesomeIcon icon={faTrashAlt} color='white' size='lg' className='todo-delete-icon' onClick={() => setDeleteModal(true)} />\r\n                <form className='todo-form-container' onSubmit={handleSubmit}>\r\n                    <label htmlFor=\"memo\" className=\"todo-label\">Memo</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"memo\"\r\n                        id=\"memo\"\r\n                        className=\"todo-input-text-memo\"\r\n                        placeholder=\"Memo\"\r\n                        value={todo.memo}\r\n                        onChange={e => setTodo({ ...todo, memo: e.target.value })}\r\n                    />\r\n                    <label htmlFor=\"checklist\" className=\"todo-label\">Memo</label>\r\n                    <div className='checklist-count-container'>\r\n                        {checklistData.map((task, index) =>\r\n                            <div style={{ display: 'flex' }}>\r\n                                <input\r\n                                    className=\"todo-input-text-checklist\"\r\n                                    key={`${task.id}`}\r\n                                    type=\"text\"\r\n                                    name={`checklist${task.id}`}\r\n                                    id={`checklist${task.id}`}\r\n                                    placeholder=\"Checklist\"\r\n                                    value={task.text}\r\n                                    onChange={handleChangeChecklist(index)}\r\n                                />\r\n                                <FontAwesomeIcon\r\n                                    className='todo-delete-icon'\r\n                                    color='white'\r\n                                    icon={faMinus}\r\n                                    style={{ marginLeft: 10 }}\r\n                                    onClick={() => handleDeleteChecklist(task)}\r\n                                />\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                    <p onClick={handleAddCheckList} className='todo-label-add'>\r\n                        <FontAwesomeIcon\r\n                            color='white'\r\n                            size='xs'\r\n                            icon={faPlus}\r\n                            style={{ marginLeft: 10 }}\r\n                        /> Add checklist</p>\r\n                </form>\r\n                <div className='todo-btn-container'>\r\n                    <button className='todo-btn-cancel' onClick={() => props.onSetModal(false)}>Cancel</button>\r\n                    <button className='todo-btn-create' onClick={() => handleSubmit()}>Save</button>\r\n                </div>\r\n            </div>\r\n\r\n            {deleteModal && <TodoDeleteModal onSelectTodo={todo} onSetModal={setDeleteModal} onCloseEditModal={props.onSetModal} />}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default connect(null, { todoUpdateData, taskDeleted })(TodoUpdateModal);","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlusCircle, faEdit } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport { todoGetData, todoUpdated, taskUpdated } from '../../app/todo'\r\nimport TodoCreateModal from '../common/TodoCreateModal';\r\nimport '../assets/css/todo.css'\r\nimport TodoUpdateModal from './../common/TodoUpdateModal';\r\n\r\nfunction ToDo(props) {\r\n    const [selectedItem, setSelectedItem] = useState('')\r\n    const [todoSelected, setTodoSelected] = useState({})\r\n    const [createModal, setCreateModal] = useState(false)\r\n    const [updateModal, setUpdateModal] = useState(false)\r\n\r\n    useEffect(() => {\r\n        const token = props.auth || localStorage.getItem('auth_token')\r\n        if (!token) props.history.replace('/login')\r\n\r\n        props.todoGetData(token)\r\n    }, [])\r\n\r\n    const calcTotalTask = (todo) => {\r\n        if (todo.status) return 'Done'\r\n        if (!todo.checklist) return '0%'\r\n        if (todo.checklist.length <= 0) return '0%'\r\n\r\n        let completedTask = 0\r\n        const totalTask = todo.checklist.length\r\n        todo.checklist.map(taskItem => taskItem.status === true ? completedTask += 1 : completedTask)\r\n        const totalStatus = Math.ceil((completedTask / totalTask) * 100)\r\n\r\n        if (totalStatus >= 100) return 'Done'\r\n\r\n        return `${totalStatus}%`\r\n    }\r\n\r\n    const handleTodoStatus = (todo) => {\r\n        props.todoUpdated(todo)\r\n    }\r\n\r\n    const handleTaskStatus = (todoID, task) => {\r\n        props.taskUpdated(todoID, task)\r\n    }\r\n\r\n    const sortDataByStatus = (data) => {\r\n        return data.sort((a, b) => { return a.status - b.status })\r\n    }\r\n\r\n    if (props.todoList <= 0 || !props.todoList) return (\r\n        <div className='todo-page-container'>\r\n            <div className='todo-container'>\r\n                <div className=\"todo-add-icon-container\">\r\n                    <FontAwesomeIcon icon={faPlusCircle} color='white' size='lg' className='todo-add-icon' onClick={() => setCreateModal(true)} />\r\n                </div>\r\n                <h1 className='todo-item-title' style={{ textAlign: 'center' }}>There are no to-do created</h1>\r\n            </div>\r\n\r\n            {!createModal ? '' : <TodoCreateModal onSetModal={setCreateModal} />}\r\n            {!updateModal ? '' : <TodoUpdateModal onSetModal={setUpdateModal} itemSelect={todoSelected} />}\r\n        </div >\r\n    )\r\n\r\n    return (\r\n        <div className='todo-page-container'>\r\n            <div className='todo-container'>\r\n                <div className=\"todo-add-icon-container\">\r\n                    <FontAwesomeIcon icon={faPlusCircle} color='white' size='lg' className='todo-add-icon' onClick={() => setCreateModal(true)} />\r\n                </div>\r\n                {sortDataByStatus(props.todoList).map(todo =>\r\n                    <div className={`todo-item ${selectedItem === todo.id ? 'active' : ''}`} key={todo.id}>\r\n                        <div className='todo-item-title-container' onClick={() => selectedItem === todo.id ? setSelectedItem('') : setSelectedItem(todo.id)}>\r\n                            <div className='item-title-container'>\r\n                                <label className=\"checkbox-container\">\r\n                                    <input type=\"checkbox\" checked={todo.status} onChange={() => handleTodoStatus(todo)} />\r\n                                    <span className=\"checkbox-checkmark\"></span>\r\n                                </label>\r\n                                <h1 className='todo-item-title'>{todo.memo}</h1>\r\n                            </div>\r\n                            <div className='todo-status-container'>\r\n                                <p className='todo-item-title'>{calcTotalTask(todo)}</p>\r\n                                <FontAwesomeIcon\r\n                                    icon={faEdit}\r\n                                    color='white'\r\n                                    size='lg'\r\n                                    className='todo-add-icon'\r\n                                    onClick={() => {\r\n                                        setUpdateModal(true)\r\n                                        setTodoSelected(todo)\r\n                                    }} />\r\n                            </div>\r\n                        </div>\r\n                        <div className='todo-task-list'>\r\n                            <ol>\r\n                                {sortDataByStatus(todo.checklist).map(task =>\r\n                                    <li key={task.id} className='checklist-container'>\r\n                                        <label className=\"checkbox-container-mini\">\r\n                                            <input type=\"checkbox\" checked={task.status} onChange={() => handleTaskStatus(todo.id, task)} />\r\n                                            <span className=\"checkbox-checkmark-mini\"></span>\r\n                                        </label>\r\n                                        {task.text}\r\n                                    </li>\r\n                                )}\r\n                            </ol>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n\r\n            {!createModal ? '' : <TodoCreateModal onSetModal={setCreateModal} />}\r\n            {!updateModal ? '' : <TodoUpdateModal onSetModal={setUpdateModal} itemSelect={todoSelected} />}\r\n        </div >\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return { todoList: state.todo }\r\n}\r\nexport default connect(mapStateToProps, { todoGetData, todoUpdated, taskUpdated })(ToDo);","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faGithub, faLinkedin } from '@fortawesome/free-brands-svg-icons'\r\n\r\nimport '../assets/css/footer.css'\r\n\r\nfunction Footer(props) {\r\n    return (\r\n        <div className='footer-container'>\r\n            <p className='footer-text'>&copy; Copyright 2021, <a className='footer-link' href=\"mailto:jmjabor@gmail.com\">Joshua Michael Jabor</a></p>\r\n            <div className='footer-icon-container'>\r\n                <a href='https://www.linkedin.com/in/joshua-michael-jabor/' target=\"_blank\" rel=\"noreferrer\" >\r\n                    <FontAwesomeIcon icon={faLinkedin} color='white' size='lg' className='footer-icon' />\r\n                </a>\r\n                <a href='https://github.com/josh1506' target=\"_blank\" rel=\"noreferrer\" >\r\n                    <FontAwesomeIcon icon={faGithub} color='white' size='lg' className='footer-icon' />\r\n                </a>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport { Redirect, Route, Switch } from 'react-router-dom';\r\n\r\nimport LandingPage from './components/pages/LandingPage';\r\nimport Login from './components/pages/Login';\r\nimport NavBar from './components/common/NavBar';\r\nimport Signup from './components/pages/Signup';\r\nimport ToDo from './components/pages/ToDo';\r\nimport './components/assets/css/app.css';\r\nimport Footer from './components/common/Footer';\r\n\r\nfunction App(props) {\r\n    return (\r\n        <div>\r\n            <NavBar />\r\n            <div className=\"app-content-container\">\r\n                <Switch>\r\n                    <Route path='/todo' component={ToDo} />\r\n                    <Route path='/login' component={Login} />\r\n                    <Route path='/signup' component={Signup} />\r\n                    <Route path='/' component={LandingPage} />\r\n                    <Redirect />\r\n                </Switch>\r\n            </div>\r\n            <Footer />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux'\r\nimport configStore from './app/configStore'\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <Provider store={configStore}>\r\n        <BrowserRouter>\r\n            <App />\r\n        </BrowserRouter>\r\n    </Provider>,\r\n    document.getElementById('root'));"],"sourceRoot":""}